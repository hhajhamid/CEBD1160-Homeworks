{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "big=max('Hello world')\n",
    "print (big)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "tiny=min('Helloworld')\n",
    "print (tiny)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Hour=float (input(\"Enter Hours \"))\n",
    "Rate=float (input(\"Enter Rate \"))\n",
    "x=float (input(\"Enter Overtime Rate \"))\n",
    "M=Rate*((float(x/100))+1)\n",
    "def Pay(Hour,Rate):\n",
    "    if Hour>=40:\n",
    "        Pay=((40*Rate)+(Hour-40)*M)\n",
    "    else:\n",
    "        Pay(Hour*Rate)\n",
    "    return Pay\n",
    "print(Pay(Hour,Rate))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "169\n",
      "Enter your guess 10\n",
      "guess way upper \n",
      "guess again 80\n",
      "guess way upper \n",
      "guess again 100\n",
      "guess upper \n",
      "guess again 150\n",
      "guess upper \n",
      "guess again 180\n",
      "guess lower \n",
      "guess again 170\n",
      "very Close ! \n",
      "guess again 172\n",
      "Close! \n",
      "guess again 171\n",
      "very Close ! \n",
      "guess again 169\n",
      "Bingo!\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "y=random.randint(0,200)\n",
    "def guess_game():\n",
    "    print (y)\n",
    "    x=int(input(\"Enter your guess \"))\n",
    "    while True:\n",
    "        if x==y:\n",
    "            return \"Bingo!\"\n",
    "            break\n",
    "        elif abs (x-y)>80:\n",
    "            if x>y:\n",
    "                print (\"guess way lower \")\n",
    "            else:\n",
    "                print (\"guess way upper \")\n",
    "        elif abs (x-y)>10:\n",
    "            if x>y:\n",
    "                print (\"guess lower \")\n",
    "            else:\n",
    "                print (\"guess upper \")\n",
    "        elif abs (x-y)>=3:\n",
    "            print (\"Close! \")\n",
    "        else:\n",
    "            print (\"very Close ! \")\n",
    "        x=int(input(\"guess again \"))\n",
    "        \n",
    "print (guess_game())\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
